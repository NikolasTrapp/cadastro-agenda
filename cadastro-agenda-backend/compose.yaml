services:
  portainer:
    container_name: "portainer"
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
      - "8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - cadastro-agenda

  postgres:
    image: postgres:16.2
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cadastro_agenda
#      POSTGRESQL_MAX_CONNECTIONS: 2000
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER:-postgres}
      interval: 10s
      retries: 10
      start_period: 60s
      timeout: 10s
    networks:
      - cadastro-agenda

  cadastro-agenda-backend:
    image: cadastro-agenda-backend:0.0.1
    container_name: cadastro-agenda-backend
    ports:
      - "8080:80"
    environment:
      SERVER_PORT: 80
      CADASTRO_AGENDA_DATABASE_URL: "jdbc:postgresql://postgres:5432/cadastro_agenda"
      CADASTRO_AGENDA_DATABASE_USERNAME: "postgres"
      CADASTRO_AGENDA_DATABASE_PASSWORD: "postgres"
      CADASTRO_AGENDA_DATABASE_DRIVERCLASSNAME: "org.postgresql.Driver"
    healthcheck:
      test: wget --spider --quiet localhost/actuator/health || exit 1
      interval: 10s
      timeout: 10s
      start_period: 60s
      retries: 10
    depends_on:
      - postgres
    networks:
      - cadastro-agenda

volumes:
  portainer_data:
  postgres_data:
    driver: local

networks:
  cadastro-agenda: